set nocompatible
set ambiwidth=single "listchars, fillchars
set backspace=indent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set textwidth=0
set expandtab
set autoindent
set smartindent
set breakindent
"set cindent
set cinoptions=+2,t0,l1,j1,J1 "(s,L0
set formatoptions=tcroqnblmM1j
set autoread
set cmdheight=1
set scrolloff=2
set laststatus=2
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,iso-2022-jp,euc-jp,sjis,default,latin1
set fileformat=unix
set fileformats=unix,dos,mac
set matchpairs=(:),{:},[:],<:>,=:;
set listchars=trail:.,extends:»,precedes:«,tab:→\  "'
set fillchars=vert:\  "'
set list
set hlsearch
set incsearch
set smartcase
set noswapfile
set nobackup
set noshowmode
set clipboard=unnamed " unnamedplus for Linux
set conceallevel=0
set wildmenu
set number
set wrap
set ttyfast
set nofoldenable
set mouse=a
"set cursorline "set no for fix slow scrolling
set signcolumn=yes
set background=dark
set timeoutlen=1
noremap <silent> q <nop>
noremap <silent> <s-q> <nop>
nnoremap <silent> <tab> <c-w>w
nnoremap <silent> <s-tab> <c-w>W
filetype plugin indent on
autocmd filetype c,cpp set cindent
"autocmd bufenter * if &filetype == '' | setlocal filetype=text | endif
autocmd bufenter * if expand('%') =~# 'MINIMAP' | set laststatus=0 | else | set laststatus=2 | endif
autocmd insertleave * redraw! " force redraw for macOS
autocmd insertleave * call system('im-select com.apple.keylayout.ABC')
"autocmd VimLeave * call system('xsel -ib', getreg('+')) "disable for macOS
autocmd colorscheme * call onedark#set_highlight ('normal',{'fg':{'gui':'#efefef','cterm':'255','cterm16':'15'}})
autocmd colorscheme * call onedark#set_highlight ('linenr',{'fg':{'gui':'#e5c07b','cterm':'180','cterm16':'3'}})
autocmd colorscheme * call onedark#set_highlight ('visual',{'fg':{'gui':'#ffffff','cterm':'15','cterm16':'15'}, 'bg':{'gui':'#ff5f5f','cterm':'203','cterm16':'9'}})
autocmd bufwritepre <buffer> LspDocumentFormatSync
" autocmd filetype markdown set nocindent noautoindent indentexpr=
let &t_SI="\033[6 q" " insert mode
let &t_EI="\033[2 q" " normal mode
let g:skip_defaults_vim=1 " disable defaults.vim
let g:html_indent_style1='inc' " fix style tag indent
let g:html_indent_script1='inc' " fix script tag indent
let g:python_highlight_all=1
let g:rainbow_active=1
let g:vim_json_syntax_conceal=0
let g:vim_markdown_conceal=0
let g:vim_markdown_conceal_code_blocks=0
let g:onedark_hide_endofbuffer=1
let g:onedark_termcolors=256
let g:highlightedyank_highlight_duration=128
let g:vim_json_conceal=0
let g:markdown_syntax_conceal=0
let g:indentLine_char = '┆'
let g:minimap_auto_start=1
let g:minimap_auto_start_win_enter=1
let g:minimap_highlight_range=0
let g:minimap_block_buftypes=['nofile','nowrite','quickfix','terminal','prompt']
let g:minimap_git_colors=1
let g:nredtree_tabs_open_on_console_startup=1
let g:html_indent_autotags='html'
let g:lsp_signature_help_enabled=0
let g:lsp_semantic_enabled=1
call plug#begin("~/.vim")
Plug 'junegunn/vim-plug'
" basics
Plug 'itchyny/lightline.vim'
Plug 'luochen1990/rainbow'
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-sleuth'
Plug 'ciaranm/detectindent'
Plug 'editorconfig/editorconfig-vim'
Plug 'Yggdroot/indentLine'
" Language Server
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
" Git
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
" Web
Plug 'kuangyujing/html5.vim',{'for':['html','javascript','css']}
" JavaScript
Plug 'pangloss/vim-javascript',{'for':['html','javascript']}
Plug 'othree/yajs.vim',{'for':['html','javascript']}
Plug 'othree/es.next.syntax.vim',{'for':['html','javascript']}
" Node.js
Plug 'moll/vim-node',{'for':'javascript'}
" Golang
Plug 'fatih/vim-go',{'for':'go'}
" Python
Plug 'hdima/python-syntax',{'for':'python'}
Plug 'Vimjas/vim-python-pep8-indent',{'for':'python'}
" TypeScript
Plug 'leafgarland/typescript-vim',{'for':['javascript','typescript']}
" JSX, TSX
Plug 'maxmellon/vim-jsx-pretty',{'for':['javascript','typescript']}
" GraphQL
Plug 'jparise/vim-graphql'
" CSV
Plug 'chrisbra/csv.vim'
" Markdown
Plug 'godlygeek/tabular',{'for':['markdown']}
Plug 'preservim/vim-markdown',{'for':['markdown']}
" SQL
Plug 'shmup/vim-sql-syntax',{'for':['sql']}
" ColorScheme
Plug 'joshdick/onedark.vim'
" todo.vim
Plug 'kuangyujing/todo.vim'
" Homebrew
Plug 'xu-cheng/brew.vim'
" Minimap
Plug 'kuangyujing/minimap.vim'
" Razor and Blazor
Plug 'jlcrochet/vim-razor'
" Others
Plug 'kuangyujing/todo.vim'
call plug#end() " + syntax enable
syntax on
colorscheme onedark
highlight endofbuffer ctermfg=0
highlight comment cterm=italic ctermfg=243
highlight matchparen cterm=none ctermfg=204
highlight highlightedyankregion ctermfg=15 ctermbg=203

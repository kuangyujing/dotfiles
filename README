DOTFILES(1)                    User Commands                    DOTFILES(1)

NAME
     dotfiles - macOS development environment setup automation

SYNOPSIS
     make [target]

DESCRIPTION
     The dotfiles repository provides automated setup for a complete macOS 
     development environment using Makefile-based configuration management.
     
     All configuration files are copied (not symlinked) to their target 
     locations, removing repository dependencies after installation.

TARGETS
     help
             Display available targets and their descriptions (default).

     setup
             Basic environment setup including:
             - Homebrew installation
             - 23 development packages (bash, git, go, node@22, CLI utilities)
             - Homebrew Bash as default shell  
             - Bash configuration (bashrc -> ~/.profile)
             - Font installation to ~/Library/Fonts
             - Vim configuration and plugins via vim-plug
             - Git configuration

     setup-apps
             Install macOS applications and development desktop applications:
             - iTerm2, Alt-Tab, Displaperture, LinearMouse, Stats
             - Visual Studio Code, GitHub Desktop
             - LinearMouse configuration
             - Global key repeat enabled for all applications

     optional-cloud-cli
             Install cloud CLI tools (optional):
             - AWS CLI (awscli)
             - Azure CLI (azure-cli)

     optional-docker
             Setup Docker environment (optional):
             - Docker CLI and docker-compose
             - Colima lightweight container runtime
             - Automatic Docker context configuration

     optional-kubernetes
             Setup Kubernetes environment (optional):
             - kubectl and kubecolor
             - minikube local cluster
             - Automatic cluster startup and verification

     uninstall
             Remove all configurations and restore system defaults:
             - Remove configuration files
             - Delete Vim configuration and plugins
             - Remove installed fonts
             - Uninstall all Homebrew packages
             - Restore default shell to /bin/bash
             - Remove Homebrew Bash from /etc/shells

PACKAGE MANAGEMENT
     The brewfiles/ directory contains host-specific subdirectories for daily
     backups of installed packages. Each host has its own Brewfile maintained
     separately from the Makefile automation:

         brewfiles/[hostname]/Brewfile

     These Brewfiles serve as backup references and are not used by the
     automated Makefile setup process.

     To create a Brewfile backup for the current host:

         make backup-brewfile

     This command automatically detects the hostname and creates a backup of
     all currently installed Homebrew packages (excluding VS Code extensions).

INTERNAL TARGETS
     The following internal targets are called automatically by public targets.
     They are prefixed with underscore and not intended for direct use:

     _install-homebrew       Install Homebrew if not already present
     _install-packages       Install basic development packages
     _install-dev-apps       Install development desktop applications
     _install-apps           Install macOS applications
     _install-fonts          Copy fonts to ~/Library/Fonts

     _configure-default-sh   Configure Homebrew bash as default shell
     _configure-bash         Copy bash configuration to ~/.profile
     _configure-vim          Setup vim configuration and install plugins
     _configure-git          Copy git configuration to ~/.gitconfig
     _configure-system       Configure global system settings (key repeat)
     _configure-vscode       Configure VS Code settings (key repeat)
     _configure-linearmouse  Setup LinearMouse configuration
     _authenticate           Authenticate sudo access for 1 hour session

SYSTEM REQUIREMENTS
     - macOS (tested on recent versions)
     - Internet connection for Homebrew and package downloads
     - Administrative privileges for system configuration changes
     - Password input required once at the beginning (valid for 1 hour)

INSTALLATION
     Clone the repository and run setup:

         git clone https://github.com/kuangyujing/dotfiles.git
         cd dotfiles
         make setup

EXAMPLES
     Basic environment setup:
         make setup

     Install macOS applications:
         make setup-apps

     Install cloud development tools:
         make optional-cloud-cli

     Setup container development:
         make optional-docker

     Setup Kubernetes development:
         make optional-kubernetes

     Remove all configurations:
         make uninstall

     Display help:
         make help

NOTES
     - Password is required once at the beginning for sudo operations
     - Sudo authentication is automatically extended to 1 hour for unattended setup
     - Temporary sudo configuration is removed during uninstall
     - Homebrew itself is not removed during uninstall
     - VS Code extensions are managed through Settings Sync
     - Shell changes require terminal restart to take effect
     - Existing configuration files are removed before installation
     - Optional targets can be run independently or in combination

SEE ALSO
     make(1), brew(1), bash(1), vim(1), git(1)

VERSION
     dotfiles automation system for macOS development environments

AUTHORS
     Personal dotfiles repository with Makefile-based automation